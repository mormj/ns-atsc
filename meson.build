# SPDX-FileCopyrightText: 2020 Josh Morman 
#

project('newsched-atsc', 'cpp', 
  version : '0.0.0',
  license : 'GPLv3',
  default_options : ['cpp_std=c++17'])

cc = meson.get_compiler('cpp')
rt_dep = cc.find_library('rt', required : false)
libdl_dep = cc.find_library('dl')

c_available = add_languages('c', required : true)
cuda_available = add_languages('cuda', required : false)

boost_dep = dependency('boost', modules : ['program_options','thread'], version : '>=1.65')
volk_dep = dependency('volk', version : '>=2.2')
yaml_dep = dependency('yaml-cpp', version : '>=0.6')
fmt_dep = dependency('fmt', method: 'cmake', modules: ['fmt::fmt'])
spdlog_dep = dependency('spdlog', method: 'cmake', modules : ['spdlog::spdlog'])
python3_dep = dependency('python3', required : get_option('enable_python'))
python3_embed_dep = dependency('python3-embed', required : get_option('enable_python'))
# Import python3 meson module which is used to find the Python dependencies.
py3_inst = import('python').find_installation('python3')

pybind11_dep = dependency('pybind11', required : get_option('enable_python'))
threads_dep = dependency('threads')
gtest_dep = dependency('gtest', main : true, version : '>=1.10', required : get_option('enable_testing'))
USE_CUDA = cuda_available and get_option('enable_cuda')
IMPLEMENT_CUDA = cuda_available and get_option('enable_cuda')
IMPLEMENT_CPU = true
cuda_dep = dependency('cuda', version : '>=10.1', required : USE_CUDA , modules : ['cufft'])
cusp_dep = dependency('cusp', required : USE_CUDA)

pmtf_dep = dependency('pmtf', version : '>= 0.0.2')

prefix = get_option('prefix')
# Escape spaces
prefix_parts = prefix.split(' ')
prefix = '\ '.join(prefix_parts)
share_dir = join_paths(prefix,'share')

SCRIPTS_DIR = join_paths(share_dir, 'utils','blockbuilder','scripts' )
run_command('python3', join_paths(SCRIPTS_DIR,'gen_meson.py'), 
  join_paths(meson.project_source_root(),'blocklib'), check: true)

# newsched_dep = dependency('newsched', method: 'cmake')
# TODO - do this with subcomponents
newsched_runtime_dep = dependency('newsched-runtime')
newsched_blocklib_filter_dep = dependency('newsched-filter')
newsched_blocklib_math_dep = dependency('newsched-math')
newsched_blocklib_fec_dep = dependency('newsched-fec')


prefix = get_option('prefix')
# Escape spaces
prefix_parts = prefix.split(' ')
prefix = '\ '.join(prefix_parts)
share_dir = join_paths(prefix,'share')

subdir('blocklib/atsc')